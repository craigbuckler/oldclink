// header styles
header {

  position: relative;

  img {
    width: 100%;
  }

  .hero {

    max-height: 70vh;

    & + .quote {
      transform: translateY(-99em);
    }

    &.progressive:not(.replace) {

      &:after {
        position: absolute;
        content: ' ';
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        background-color: $color-fore3;
        filter: opacity(0%);
        will-change: filter;
        animation: 1s linear 1.2s forwards overlayhero;
      }

      & + .quote {
        will-change: filter, transform;
        animation: 1.5s ease-in-out 1.2s forwards quotehero;
      }

    }
  }

  .quote {
    font-size: calc(1rem + 2vmin);
    top: 15vmin;
    padding: 0 3vw;
  }

  .hashero & .quote {
    position: absolute;
    left: 0;
    right: 0;
  }

  p, q, cite {
    display: block;
    @include centre-column;
    margin-top: 0;
    margin-bottom: 0;
  }

  q, cite {
    color: #fff;
    text-shadow: 1px 1px 2px #000, 1px 1px 3px #000;
  }

  q {
    font-size: 1.2em;
    text-align: center;
    line-height: 1;
  }

  cite {
    font-size: 0.85em;
    text-align: right;
    margin-top: 0.3em;
  }

  #logo a {
    display: inline-block;
    padding: 0.8rem 0 0.2rem;

    &:link, &:visited {
      color: $color-fore1;
    }

    &:hover, &:active {
      color: $color-fore2;
    }
  }

  @include respond('small') {

    .hero {
      max-height: 70vh;
    }

    #logo {
      top: 0;
      z-index: 1;

      .hashero & {
        position: absolute;
        width: 100%;
        background-color: rgba(255,255,255,0.8);
      }
    }

    .cta {
      position: absolute;
      left: 0;
      right: 0;
      bottom: 10vmin;
    }

  }

}

// animation
@keyframes overlayhero {
	0% { filter: opacity(0%); }
	100% { filter: opacity(60%); }
}

@keyframes quotehero {
	0% {
    filter: blur(30px);
    transform: translateY(-2em);
  }
	100% {
    filter: blur(0px);
    transform: translateY(0);
  }
}
